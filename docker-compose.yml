services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 5s
      retries: 5

  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    networks:
      - app-network

  tests-worker-1:
    build:
      context: ./TestsWorker
      dockerfile: TestsWorker/Dockerfile
    container_name: tests-worker-1
    environment:
      - RABBITMQ_QUEUE_RESULTS=results_queue
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=my_queue
      - SEQ_URL=http://seq:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - app-network

  tests-worker-2:
    build:
      context: ./TestsWorker
      dockerfile: TestsWorker/Dockerfile
    container_name: tests-worker-2
    environment:
      - RABBITMQ_QUEUE_RESULTS=results_queue
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=my_queue
      - SEQ_URL=http://seq:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - app-network

  backend:
    build:
      context: ./CodeClash 
      dockerfile: Api/Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__WriteDbContext=Host=postgres;Port=5432;Database=code_clash;Username=postgres;Password=123
      - JwtOptions__SecretKey=secretkeysecretkeysecretkeysecretkeysecretkeysecretkeysecretkey
      - JwtOptions__ExpiresHours=12
      - JwtOptions__CustomHeader=26e177fc-6896-49c7-82f7-6e90ccd0c9ba
      - Serilog__WriteTo__0__Name=Seq
      - RABBITMQ_QUEUE_RESULTS=results_queue
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=my_queue
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: code_clash
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
